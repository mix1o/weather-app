{"version":3,"sources":["components/Loading/Loading.jsx","components/NextDay/NextDay.jsx","consts/Days.js","components/Weather/WeatherDetails.jsx","components/Weather/Weather.jsx","App.jsx","index.js"],"names":["Loading","className","NextDay","lat","lon","useState","nextDaysWeather","setNextDaysWeather","useEffect","fetch","then","res","json","daily","map","day","weather","index","main","icon","Date","dt","toLocaleDateString","src","temp","toFixed","days","WeatherDetails","temp_min","wind","speed","humidity","temp_max","pressure","feels_like","Weather","date","setDate","setDay","getDate","month","getMonth","year","getFullYear","getDay","currentDate","name","sys","country","coord","mic","window","SpeechRecognition","webkitSpeechRecognition","continuos","interimResults","lang","App","city","setCity","setWeather","isListening","setIsListening","loading","setLoading","existsCity","setExistsCity","error","setError","recent","setRecent","userSearches","setUserSearches","handleListen","JSON","parse","localStorage","getItem","getWeather","value","words","length","shift","exists","indexOf","i","push","setItem","stringify","addRecent","cod","start","stop","onresult","e","transcript","Array","from","results","result","join","setTimeout","onerror","console","log","onClick","onFocus","onKeyDown","code","onChange","target","type","placeholder","handleMapRecent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af6b70a3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <i className=\"fas fa-cloud\"></i>\r\n      <i className=\"fas fa-bolt\"></i>\r\n      <i className=\"fas fa-sun\"></i>\r\n      <i className=\"fas fa-cloud-showers-heavy\"></i>\r\n      <p className=\"loading__text\">Loading ...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst NextDay = ({ lat, lon }) => {\r\n  const [nextDaysWeather, setNextDaysWeather] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly&appid=7e370e3dd7190049ec2699d522a30847&units=metric`\r\n    )\r\n      .then(res => res.json())\r\n      .then(json => setNextDaysWeather(json.daily));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {nextDaysWeather.map(day => {\r\n        return day.weather.map(({ main, icon }, index) => {\r\n          return (\r\n            <div key={index} className=\"next-day\">\r\n              <p className=\"next-day__date\">\r\n                {new Date(day.dt * 1000).toLocaleDateString()}\r\n              </p>\r\n              <img src={`http://openweathermap.org/img/wn/${icon}.png`} />\r\n              <p className=\"next-day__temp\">\r\n                {day.temp.day.toFixed(0)}&#176; C\r\n              </p>\r\n              <p className=\"next-day__description\">{main}</p>\r\n            </div>\r\n          );\r\n        });\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextDay;\r\n","export const days = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n  'Sunday',\r\n];\r\n","const WeatherDetails = ({ weather }) => {\r\n  return (\r\n    <div className=\"weather__details\">\r\n      <div className=\"weather__info\">\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.temp_min}&#176; C\r\n          </p>\r\n          <p className=\"weather__details-description\">Temperature min</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">{weather.wind.speed} km / h</p>\r\n          <p className=\"weather__details-description\">Wind speed</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">{weather.main.humidity}%</p>\r\n          <p className=\"weather__details-description\">Humidity</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"weather__info weather__info--lower\">\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.temp_max}&#176; C\r\n          </p>\r\n          <p className=\"weather__details-description\">Temperature max</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.pressure}\r\n            hPa\r\n          </p>\r\n          <p className=\"weather__details-description\">Pressure</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.feels_like}&#176; C\r\n          </p>\r\n          <p className=\"weather__details-description\">Feels like</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n","import { useEffect, useState } from 'react';\r\nimport NextDay from '../NextDay/NextDay';\r\nimport { days } from '../../consts/Days';\r\nimport WeatherDetails from './WeatherDetails';\r\n\r\nconst Weather = ({ weather }) => {\r\n  const [date, setDate] = useState('');\r\n  const [day, setDay] = useState(0);\r\n\r\n  const currentDate = () => {\r\n    const date = new Date();\r\n\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    setDay(date.getDay() - 1);\r\n    if (day < 10) day = `0${day}`;\r\n    if (month < 10) month = `0${month}`;\r\n\r\n    setDate(`${day}/${month}/${year}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    currentDate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {weather && (\r\n        <div className=\"weather\">\r\n          <div className=\"weather__city\">\r\n            <h3>\r\n              {weather.name}, <span className=\"weather__country\"></span>\r\n              {weather.sys.country}\r\n            </h3>\r\n            <p className=\"weather__date\">\r\n              {days[day]} {date}\r\n            </p>\r\n          </div>\r\n          <div className=\"weather__current\">\r\n            {weather.weather.map(({ main, icon }, index) => (\r\n              <div key={index} className=\"weather__container\">\r\n                <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} />\r\n                <div>\r\n                  <p className=\"weather__temperature\">\r\n                    {weather.main.temp.toFixed(0)}\r\n                    &#176; C\r\n                  </p>\r\n                  <p className=\"weather__description\">{main}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <WeatherDetails weather={weather} />\r\n          <p className=\"weather__heading\">\r\n            Approximate weather for next days for{' '}\r\n            <span className=\"weather__marked\">{weather.name}</span>\r\n          </p>\r\n          <div className=\"weather__next-days\">\r\n            <NextDay lat={weather.coord.lat} lon={weather.coord.lon} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport Loading from './components/Loading/Loading';\nimport Weather from './components/Weather/Weather';\n\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\n\nconst mic = new SpeechRecognition();\n\nmic.continuos = true;\nmic.interimResults = true;\nmic.lang = 'en-US';\n\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n  const [isListening, setIsListening] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [existsCity, setExistsCity] = useState(false);\n  const [error, setError] = useState(null);\n  const [recent, setRecent] = useState(false);\n  const [userSearches, setUserSearches] = useState([]);\n\n  useEffect(() => {\n    handleListen();\n    setUserSearches(JSON.parse(localStorage.getItem('recent-search')));\n  }, [isListening]);\n\n  const addRecent = value => {\n    const words = JSON.parse(localStorage.getItem('recent-search'));\n    if (words.length > 10) {\n      words.shift();\n    }\n\n    const exists = words.indexOf(i => i === value);\n\n    if (value !== '' && exists === -1) words.push(value);\n\n    localStorage.setItem('recent-search', JSON.stringify(words));\n  };\n\n  const handleMapRecent = () => {\n    if (userSearches) {\n      return userSearches.map((name, index) => (\n        <p\n          key={index}\n          onClick={() => getWeather(name)}\n          className=\"app__recent-name\"\n        >\n          {name}\n        </p>\n      ));\n    }\n  };\n\n  const getWeather = name => {\n    addRecent(name);\n\n    if (name.length > 1) {\n      setRecent(false);\n      setLoading(true);\n      setExistsCity(false);\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${name}&appid=7e370e3dd7190049ec2699d522a30847&units=metric`\n      )\n        .then(res => res.json())\n        .then(json => {\n          if (json.cod === '404') {\n            setLoading(false);\n            setExistsCity(false);\n            setError(true);\n          } else {\n            setWeather(json);\n            setLoading(false);\n            setExistsCity(true);\n            setError(false);\n          }\n        });\n      return;\n    }\n    setError(true);\n  };\n\n  const handleListen = () => {\n    if (isListening) {\n      if (city.length > 0) {\n        setCity('');\n      }\n      mic.start();\n    } else {\n      mic.stop();\n    }\n    mic.onresult = e => {\n      const transcript = Array.from(e.results)\n        .map(result => result[0])\n        .map(result => result.transcript)\n        .join('');\n\n      if (transcript.length > 0) {\n        setCity(transcript);\n\n        mic.stop();\n        setIsListening(false);\n\n        if (!isListening) {\n          setTimeout(() => {\n            getWeather(transcript);\n          }, 1000);\n        }\n      }\n\n      mic.onerror = e => {\n        console.log(e.error);\n      };\n    };\n  };\n\n  return (\n    <div className={`app ${existsCity ? weather.weather[0].main : null}`}>\n      <div className=\"app__search-container\">\n        <label className=\"app__label\">\n          <button onClick={() => getWeather(city)} className=\"app__btn-search\">\n            <i className=\"fas fa-search\"></i>\n          </button>\n          <input\n            onFocus={() => setRecent(true)}\n            // onBlur={() => setRecent(false)}\n            onKeyDown={e => {\n              if (e.code === 'Enter') getWeather(city);\n            }}\n            onChange={e => setCity(e.target.value)}\n            value={city}\n            className=\"app__search\"\n            type=\"text\"\n            placeholder=\"San Francisco\"\n          />\n          {isListening && <i className=\"fas fa-circle\"></i>}\n          <button className=\"app__mic\" onClick={() => setIsListening(true)}>\n            {!isListening && <i className=\"fas fa-microphone\"></i>}\n            {isListening && <i className=\"fas fa-microphone-slash\"></i>}\n          </button>\n        </label>\n        {recent && userSearches.length > 0 && (\n          <div className=\"app__recent\">{handleMapRecent()}</div>\n        )}\n      </div>\n      {!loading && existsCity && <Weather weather={weather} />}\n      {loading && <Loading />}\n      {error && (\n        <p className=\"app__error\">\n          City not found. Please enter a valid name of city and remember name of\n          city must be at least 3 words!\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}