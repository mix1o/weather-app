{"version":3,"sources":["consts/Actions.js","components/Hamburger/Hamburger.jsx","components/Loading/Loading.jsx","components/NextDay/NextDay.jsx","consts/Days.js","components/Weather/WeatherDetails.jsx","components/Weather/Weather.jsx","App.jsx","index.js"],"names":["ACTIONS","HamburgerContent","styled","div","open","Hamburger","dispatch","userData","getWeather","useState","setOpen","userCity","setUserCity","className","onClick","slice","map","value","id","defaultValue","defaultCity","onChange","e","target","type","payload","city","Loading","NextDay","lat","lon","nextDaysWeather","setNextDaysWeather","useEffect","fetch","process","then","res","json","daily","day","weather","index","main","icon","Date","dt","toLocaleDateString","src","temp","toFixed","days","WeatherDetails","temp_min","wind","speed","humidity","temp_max","pressure","feels_like","Weather","date","setDate","setDay","getDate","month","getMonth","year","getFullYear","getDay","currentDate","name","sys","country","coord","mic","window","SpeechRecognition","webkitSpeechRecognition","continuos","interimResults","lang","App","setCity","setWeather","isListening","setIsListening","loading","setLoading","existsCity","setExistsCity","error","setError","showDefault","setShowDefault","handleListen","add","length","cod","start","stop","onresult","transcript","Array","from","results","result","join","setTimeout","onerror","console","log","reducer","useCallback","action","findIndex","element","toLowerCase","splice","useReducer","localData","localStorage","getItem","JSON","parse","setItem","stringify","onKeyDown","code","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26f33350.chunk.js","sourcesContent":["export const ACTIONS = {\r\n  ADD: 'ADD NEW',\r\n  DEFAULT_CITY: 'SET DEFAULT',\r\n};\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ACTIONS } from '../../consts/Actions';\r\n\r\nconst HamburgerContent = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100vh;\r\n  background: #d3d3d3;\r\n  width: 80%;\r\n  z-index: 10;\r\n  transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(100%)')};\r\n  transition: transform 0.3s ease-in-out;\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Hamburger = ({ dispatch, userData, getWeather }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [userCity, setUserCity] = useState('');\r\n\r\n  return (\r\n    <div className=\"hamburger\">\r\n      <div className=\"hamburger__header\">\r\n        <p className=\"hamburger__heading\">Weather App</p>\r\n        <div className=\"hamburger__icon\">\r\n          {!open && (\r\n            <i onClick={() => setOpen(true)} className=\"fas fa-bars\"></i>\r\n          )}\r\n          {open && (\r\n            <i onClick={() => setOpen(false)} className=\"fas fa-times\"></i>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <HamburgerContent open={open}>\r\n        <div className=\"hamburger__recent\">\r\n          <h4 className=\"hamburger__main-heading\">\r\n            Your recent searches <i className=\"fas fa-search\"></i>\r\n          </h4>\r\n          <p className=\"hamburger__description\">\r\n            Click one of them to see weather\r\n          </p>\r\n          <div className=\"hamburger__container-recent\">\r\n            {userData.slice(1).map((value, id) => (\r\n              <p\r\n                onClick={() => {\r\n                  getWeather(value);\r\n                  setOpen(false);\r\n                }}\r\n                key={id}\r\n                className=\"hamburger__recent-words\"\r\n              >\r\n                {value}\r\n              </p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"hamburger__user-default-city\">\r\n          <h4 className=\"hamburger__main-heading\">\r\n            Set your city <i className=\"fas fa-home\"></i>\r\n          </h4>\r\n          <p className=\"hamburger__description\">\r\n            You can see your city as default.\r\n          </p>\r\n          <label className=\"hamburger__label\">\r\n            <input\r\n              className=\"hamburger__input\"\r\n              defaultValue={userData[0].defaultCity}\r\n              onChange={e => setUserCity(e.target.value)}\r\n              type=\"text\"\r\n            />\r\n            <button\r\n              onClick={() => {\r\n                dispatch({\r\n                  type: ACTIONS.DEFAULT_CITY,\r\n                  payload: { city: userCity },\r\n                });\r\n                setOpen(false);\r\n              }}\r\n              className=\"hamburger__btn\"\r\n            >\r\n              SET\r\n            </button>\r\n          </label>\r\n        </div>\r\n        <div className=\"hamburger__rights\">\r\n          <p className=\"hamburger__footer-text\">WeatherApp by mix1o</p>\r\n          <p className=\"hamburger__footer-text\">All rights reserved &copy;</p>\r\n        </div>\r\n      </HamburgerContent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hamburger;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <i className=\"fas fa-cloud\"></i>\r\n      <i className=\"fas fa-bolt\"></i>\r\n      <i className=\"fas fa-sun\"></i>\r\n      <i className=\"fas fa-cloud-showers-heavy\"></i>\r\n      <p className=\"loading__text\">Loading ...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst NextDay = ({ lat, lon }) => {\r\n  const [nextDaysWeather, setNextDaysWeather] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`\r\n    )\r\n      .then(res => res.json())\r\n      .then(json => setNextDaysWeather(json.daily));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {nextDaysWeather.map(day => {\r\n        return day.weather.map(({ main, icon }, index) => {\r\n          return (\r\n            <div key={index} className=\"next-day\">\r\n              <p className=\"next-day__date\">\r\n                {new Date(day.dt * 1000).toLocaleDateString()}\r\n              </p>\r\n              <img src={`http://openweathermap.org/img/wn/${icon}.png`} />\r\n              <p className=\"next-day__temp\">\r\n                {day.temp.day.toFixed(0)}&#176; C\r\n              </p>\r\n              <p className=\"next-day__description\">{main}</p>\r\n            </div>\r\n          );\r\n        });\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextDay;\r\n","export const days = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n  'Sunday',\r\n];\r\n","const WeatherDetails = ({ weather }) => {\r\n  return (\r\n    <div className=\"weather__details\">\r\n      <div className=\"weather__info\">\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.temp_min.toFixed(0)}&#176; C\r\n          </p>\r\n          <p className=\"weather__details-description\">Temperature min</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">{weather.wind.speed} km / h</p>\r\n          <p className=\"weather__details-description\">Wind speed</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">{weather.main.humidity}%</p>\r\n          <p className=\"weather__details-description\">Humidity</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"weather__info weather__info--lower\">\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.temp_max.toFixed(0)}&#176; C\r\n          </p>\r\n          <p className=\"weather__details-description\">Temperature max</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.pressure}\r\n            hPa\r\n          </p>\r\n          <p className=\"weather__details-description\">Pressure</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.feels_like}&#176; C\r\n          </p>\r\n          <p className=\"weather__details-description\">Feels like</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n","import { useEffect, useState } from 'react';\r\nimport NextDay from '../NextDay/NextDay';\r\nimport { days } from '../../consts/Days';\r\nimport WeatherDetails from './WeatherDetails';\r\n\r\nconst Weather = ({ weather }) => {\r\n  const [date, setDate] = useState('');\r\n  const [day, setDay] = useState(0);\r\n\r\n  const currentDate = () => {\r\n    const date = new Date();\r\n\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    setDay(date.getDay() - 1);\r\n    if (day < 10) day = `0${day}`;\r\n    if (month < 10) month = `0${month}`;\r\n\r\n    setDate(`${day}/${month}/${year}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    currentDate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {weather && (\r\n        <div className=\"weather\">\r\n          <div className=\"weather__city\">\r\n            <h3>\r\n              {weather.name}, <span className=\"weather__country\"></span>\r\n              {weather.sys.country}\r\n            </h3>\r\n            <p className=\"weather__date\">\r\n              {days[day]} {date}\r\n            </p>\r\n          </div>\r\n          <div className=\"weather__current\">\r\n            {weather.weather.map(({ main, icon }, index) => (\r\n              <div key={index} className=\"weather__container\">\r\n                <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} />\r\n                <div>\r\n                  <p className=\"weather__temperature\">\r\n                    {weather.main.temp.toFixed(0)}\r\n                    &#176; C\r\n                  </p>\r\n                  <p className=\"weather__description\">{main}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <WeatherDetails weather={weather} />\r\n          <p className=\"weather__heading\">\r\n            Approximate weather for next days for{' '}\r\n            <span className=\"weather__marked\">{weather.name}</span>\r\n          </p>\r\n          <div className=\"weather__next-days\">\r\n            <NextDay lat={weather.coord.lat} lon={weather.coord.lon} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import { useCallback, useEffect, useReducer, useState } from 'react';\nimport './App.scss';\nimport Hamburger from './components/Hamburger/Hamburger';\nimport Loading from './components/Loading/Loading';\nimport Weather from './components/Weather/Weather';\nimport { ACTIONS } from './consts/Actions';\n\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\n\nconst mic = new SpeechRecognition();\n\nmic.continuos = true;\nmic.interimResults = true;\nmic.lang = 'en-US';\n\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n  const [isListening, setIsListening] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [existsCity, setExistsCity] = useState(false);\n  const [error, setError] = useState(null);\n  const [showDefault, setShowDefault] = useState(true);\n\n  useEffect(() => {\n    handleListen();\n  }, [isListening]);\n\n  const getWeather = (name, add = true) => {\n    if (name.length > 1) {\n      if (add) {\n        dispatch({ type: ACTIONS.ADD, payload: { name } });\n      }\n      setLoading(true);\n      setExistsCity(false);\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${name}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`\n      )\n        .then(res => res.json())\n        .then(json => {\n          if (json.cod === '404') {\n            setLoading(false);\n            setExistsCity(false);\n            setError(true);\n          } else {\n            setWeather(json);\n            setLoading(false);\n            setExistsCity(true);\n            setError(false);\n            setShowDefault(false);\n          }\n        });\n      return;\n    }\n    setError(true);\n  };\n\n  const handleListen = () => {\n    if (isListening) {\n      if (city.length > 0) {\n        setCity('');\n      }\n      mic.start();\n    } else {\n      mic.stop();\n    }\n    mic.onresult = e => {\n      const transcript = Array.from(e.results)\n        .map(result => result[0])\n        .map(result => result.transcript)\n        .join('');\n\n      if (transcript.length > 0) {\n        setCity(transcript);\n\n        mic.stop();\n        setIsListening(false);\n\n        if (!isListening) {\n          setTimeout(() => {\n            getWeather(transcript);\n          }, 1000);\n        }\n      }\n\n      mic.onerror = e => {\n        console.log(e.error);\n      };\n    };\n  };\n\n  const reducer = useCallback((userData, action) => {\n    switch (action.type) {\n      case ACTIONS.ADD:\n        const index = userData\n          .slice(1)\n          .findIndex(\n            element =>\n              element.toLowerCase() === action.payload.name.toLowerCase()\n          );\n        if (userData.length === 16) {\n          userData.splice(1, 1);\n        }\n\n        if (index === -1 && userData.length <= 16) {\n          return [...userData, action.payload.name];\n        }\n\n        return [...userData];\n\n      case ACTIONS.DEFAULT_CITY:\n        userData[0].defaultCity = action.payload.city;\n        return [...userData];\n    }\n  }, []);\n\n  const [userData, dispatch] = useReducer(\n    reducer,\n    [\n      {\n        defaultCity: '',\n      },\n    ],\n    () => {\n      const localData = localStorage.getItem('user-data');\n      return localData\n        ? JSON.parse(localData)\n        : [\n            {\n              defaultCity: '',\n            },\n          ];\n    }\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem('user-data', JSON.stringify(userData));\n\n    if (userData[0].defaultCity !== '' && !existsCity && showDefault) {\n      const name = userData[0].defaultCity;\n      getWeather(name, false);\n    }\n  }, [userData]);\n\n  console.log(weather);\n  return (\n    <div className={`app ${existsCity ? weather.weather[0].main : null}`}>\n      <Hamburger\n        getWeather={getWeather}\n        userData={userData}\n        dispatch={dispatch}\n      />\n      <div className=\"app__search-container\">\n        <label className=\"app__label\">\n          <button onClick={() => getWeather(city)} className=\"app__btn-search\">\n            <i className=\"fas fa-search\"></i>\n          </button>\n          <input\n            onKeyDown={e => {\n              if (e.code === 'Enter') getWeather(city);\n            }}\n            onChange={e => setCity(e.target.value)}\n            value={city}\n            className=\"app__search\"\n            type=\"text\"\n            placeholder=\"San Francisco\"\n          />\n          {isListening && <i className=\"fas fa-circle\"></i>}\n          <button className=\"app__mic\" onClick={() => setIsListening(true)}>\n            {!isListening && <i className=\"fas fa-microphone\"></i>}\n            {isListening && <i className=\"fas fa-microphone-slash\"></i>}\n          </button>\n        </label>\n      </div>\n\n      {!loading && existsCity && <Weather weather={weather} />}\n      {loading && <Loading />}\n      {error && (\n        <p className=\"app__error\">\n          City not found. Please enter a valid name of city and remember name of\n          city must be at least 3 words!\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}