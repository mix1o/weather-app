{"version":3,"sources":["components/Loading/Loading.jsx","components/NextDay/NextDay.jsx","consts/Days.js","components/Weather/WeatherDetails.jsx","components/Weather/Weather.jsx","App.jsx","index.js"],"names":["Loading","className","NextDay","lat","lon","useState","nextDaysWeather","setNextDaysWeather","useEffect","fetch","process","then","res","json","daily","map","day","weather","index","main","icon","Date","dt","toLocaleDateString","src","temp","toFixed","days","WeatherDetails","temp_min","wind","speed","humidity","temp_max","pressure","feels_like","Weather","date","setDate","setDay","getDate","month","getMonth","year","getFullYear","getDay","currentDate","name","sys","country","coord","mic","window","SpeechRecognition","webkitSpeechRecognition","continuos","interimResults","lang","App","city","setCity","setWeather","isListening","setIsListening","loading","setLoading","existsCity","setExistsCity","error","setError","open","handleListen","getWeather","length","cod","start","stop","onresult","e","transcript","Array","from","results","result","join","setTimeout","onerror","console","log","onClick","onKeyDown","code","onChange","target","value","type","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.720ef66e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <i className=\"fas fa-cloud\"></i>\r\n      <i className=\"fas fa-bolt\"></i>\r\n      <i className=\"fas fa-sun\"></i>\r\n      <i className=\"fas fa-cloud-showers-heavy\"></i>\r\n      <p className=\"loading__text\">Loading ...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst NextDay = ({ lat, lon }) => {\r\n  const [nextDaysWeather, setNextDaysWeather] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`\r\n    )\r\n      .then(res => res.json())\r\n      .then(json => setNextDaysWeather(json.daily));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {nextDaysWeather.map(day => {\r\n        return day.weather.map(({ main, icon }, index) => {\r\n          return (\r\n            <div key={index} className=\"next-day\">\r\n              <p className=\"next-day__date\">\r\n                {new Date(day.dt * 1000).toLocaleDateString()}\r\n              </p>\r\n              <img src={`http://openweathermap.org/img/wn/${icon}.png`} />\r\n              <p className=\"next-day__temp\">\r\n                {day.temp.day.toFixed(0)}&#176; C\r\n              </p>\r\n              <p className=\"next-day__description\">{main}</p>\r\n            </div>\r\n          );\r\n        });\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextDay;\r\n","export const days = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n  'Sunday',\r\n];\r\n","const WeatherDetails = ({ weather }) => {\r\n  return (\r\n    <div className=\"weather__details\">\r\n      <div className=\"weather__info\">\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.temp_min.toFixed(0)}&#176; C\r\n          </p>\r\n          <p className=\"weather__details-description\">Temperature min</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">{weather.wind.speed} km / h</p>\r\n          <p className=\"weather__details-description\">Wind speed</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">{weather.main.humidity}%</p>\r\n          <p className=\"weather__details-description\">Humidity</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"weather__info weather__info--lower\">\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.temp_max.toFixed(0)}&#176; C\r\n          </p>\r\n          <p className=\"weather__details-description\">Temperature max</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.pressure}\r\n            hPa\r\n          </p>\r\n          <p className=\"weather__details-description\">Pressure</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"weather__details-main\">\r\n            {weather.main.feels_like}&#176; C\r\n          </p>\r\n          <p className=\"weather__details-description\">Feels like</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherDetails;\r\n","import { useEffect, useState } from 'react';\r\nimport NextDay from '../NextDay/NextDay';\r\nimport { days } from '../../consts/Days';\r\nimport WeatherDetails from './WeatherDetails';\r\n\r\nconst Weather = ({ weather }) => {\r\n  const [date, setDate] = useState('');\r\n  const [day, setDay] = useState(0);\r\n\r\n  const currentDate = () => {\r\n    const date = new Date();\r\n\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    setDay(date.getDay() - 1);\r\n    if (day < 10) day = `0${day}`;\r\n    if (month < 10) month = `0${month}`;\r\n\r\n    setDate(`${day}/${month}/${year}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    currentDate();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {weather && (\r\n        <div className=\"weather\">\r\n          <div className=\"weather__city\">\r\n            <h3>\r\n              {weather.name}, <span className=\"weather__country\"></span>\r\n              {weather.sys.country}\r\n            </h3>\r\n            <p className=\"weather__date\">\r\n              {days[day]} {date}\r\n            </p>\r\n          </div>\r\n          <div className=\"weather__current\">\r\n            {weather.weather.map(({ main, icon }, index) => (\r\n              <div key={index} className=\"weather__container\">\r\n                <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} />\r\n                <div>\r\n                  <p className=\"weather__temperature\">\r\n                    {weather.main.temp.toFixed(0)}\r\n                    &#176; C\r\n                  </p>\r\n                  <p className=\"weather__description\">{main}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <WeatherDetails weather={weather} />\r\n          <p className=\"weather__heading\">\r\n            Approximate weather for next days for{' '}\r\n            <span className=\"weather__marked\">{weather.name}</span>\r\n          </p>\r\n          <div className=\"weather__next-days\">\r\n            <NextDay lat={weather.coord.lat} lon={weather.coord.lon} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport Loading from './components/Loading/Loading';\nimport Weather from './components/Weather/Weather';\n\nconst SpeechRecognition =\n  window.SpeechRecognition || window.webkitSpeechRecognition;\n\nconst mic = new SpeechRecognition();\n\nmic.continuos = true;\nmic.interimResults = true;\nmic.lang = 'en-US';\n\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n  const [isListening, setIsListening] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [existsCity, setExistsCity] = useState(false);\n  const [error, setError] = useState(null);\n\n  // DROPDOWN\n  const [open, setOpen] = useState(false);\n  //\n\n  useEffect(() => {\n    handleListen();\n  }, [isListening]);\n\n  const getWeather = name => {\n    if (name.length > 1) {\n      setLoading(true);\n      setExistsCity(false);\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${name}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=metric`\n      )\n        .then(res => res.json())\n        .then(json => {\n          if (json.cod === '404') {\n            setLoading(false);\n            setExistsCity(false);\n            setError(true);\n          } else {\n            setWeather(json);\n            setLoading(false);\n            setExistsCity(true);\n            setError(false);\n          }\n        });\n      return;\n    }\n    setError(true);\n  };\n\n  const handleListen = () => {\n    if (isListening) {\n      if (city.length > 0) {\n        setCity('');\n      }\n      mic.start();\n    } else {\n      mic.stop();\n    }\n    mic.onresult = e => {\n      const transcript = Array.from(e.results)\n        .map(result => result[0])\n        .map(result => result.transcript)\n        .join('');\n\n      if (transcript.length > 0) {\n        setCity(transcript);\n\n        mic.stop();\n        setIsListening(false);\n\n        if (!isListening) {\n          setTimeout(() => {\n            getWeather(transcript);\n          }, 1000);\n        }\n      }\n\n      mic.onerror = e => {\n        console.log(e.error);\n      };\n    };\n  };\n\n  return (\n    <div className={`app ${existsCity ? weather.weather[0].main : null}`}>\n      <div className=\"app__search-container\">\n        <label className=\"app__label\">\n          <button onClick={() => getWeather(city)} className=\"app__btn-search\">\n            <i className=\"fas fa-search\"></i>\n          </button>\n          <input\n            onKeyDown={e => {\n              if (e.code === 'Enter') getWeather(city);\n            }}\n            onChange={e => setCity(e.target.value)}\n            value={city}\n            className=\"app__search\"\n            type=\"text\"\n            placeholder=\"San Francisco\"\n          />\n          {isListening && <i className=\"fas fa-circle\"></i>}\n          <button className=\"app__mic\" onClick={() => setIsListening(true)}>\n            {!isListening && <i className=\"fas fa-microphone\"></i>}\n            {isListening && <i className=\"fas fa-microphone-slash\"></i>}\n          </button>\n        </label>\n      </div>\n      {open && <div>DUPA</div>}\n      {!loading && existsCity && <Weather weather={weather} />}\n      {loading && <Loading />}\n      {error && (\n        <p className=\"app__error\">\n          City not found. Please enter a valid name of city and remember name of\n          city must be at least 3 words!\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}